import pandas as pd
import tensorflow as tf
import numpy as np
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout, Activation, Flatten, Conv2D, MaxPooling2D
from tensorflow.keras.utils import normalize


df_train = pd.read_csv("train.csv")
df_test = pd.read_csv("test.csv")

train = df_train.iloc[:,1:].values.astype("float32")
labels = df_train.iloc[:,0].values.astype("float32")
test = df_test.iloc[:,:].values.astype("float32")
train = train.reshape(42000,28,28)
test = test.reshape(test.shape[0],28,28)

x_train = normalize(train, axis=1)
x_test = normalize(test, axis=1)
x_train = np.array(x_train).reshape(-1,28,28,1)

model = Sequential()
model.add(Conv2D(64,(2,2),input_shape = x_train.shape[1:]))
model.add(Activation("relu"))
model.add(MaxPooling2D(pool_size=(2,2)))

model.add(Conv2D(64,(2,2)))
model.add(Activation("relu"))
model.add(MaxPooling2D(pool_size=(2,2)))

# model.add(Conv2D(64,(3,3)))
# model.add(Activation("relu"))
# model.add(MaxPooling2D(pool_size=(2,2)))

model.add(Flatten())
model.add(Dense(64))
model.add(Activation("relu"))

model.add(Dense(10))
model.add(Activation("sigmoid"))

model.compile(loss="sparse_categorical_crossentropy",
              optimizer="adam",
              metrics=["accuracy"],)

model.fit(x_train,labels,batch_size=32,epochs=7,validation_split=0.2)

model.save("CNN_1")